#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY 0
#define NUM_NAV  1
#define FNXTRA  2
#define GAME 3
#define BT_BL 4

#define COMBO_TIMEOUT_SHORT 30

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
};

/ {
    macros {
        // (|)
        pair_par: pair_par {
            label = "pair_parentheses";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
        };
        // [|]
        pair_bkt: pair_bkt {
            label = "pair_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT>;
        };
        // {|}
        pair_brc: pair_brc {
            label = "pair_braces";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT>;
        };
        // '|'
        pair_sqt: pair_sqt {
            label = "pair_single_quotes";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp SQT &kp SQT &kp LEFT>;
        };
        // "|"
        pair_dqt: pair_dqt {
            label = "pair_double_quotes";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp DQT &kp DQT &kp LEFT>;
        };
        // `|`
        pair_btk: pair_btk {
            label = "pair_backticks";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp GRAVE &kp GRAVE &kp LEFT>;
        };
        // ```|```
        pair_cbk: pair_cbk {
            label = "pair_code_block";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp LEFT &kp LEFT &kp LEFT>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // this will produce both brackets [] and move the cursor inside 
        combo_bkt_cv { // [|] //                         //  ╭────────────────────────╮   ╭────────────────────────╮  
            timeout-ms = <COMBO_TIMEOUT_SHORT>;          //  │  0   1   2   3   4   5 │   │  6   7   8   9  10  11 │   
            key-positions = <27 28>; // cv               //  │ 12  13  14  15  16  17 │   │ 18  19  20  21  22  23 │
            bindings = <&pair_bkt>;                      //  │ 24  25  26  --  --  29 │   │ 30  31  32  33  34  35 │
            layers = <0 1 2>;                            //  ╰───────────╮ 36  37  38 │   │ 39  40  41 ╭───────────╯
                                                         //              ╰────────────╯   ╰────────────╯  
        };
        // this will produce both parenthesis () and move the cursor inside 
        combo_par_df { // (|) //                          //  ╭────────────────────────╮   ╭────────────────────────╮
            timeout-ms = <COMBO_TIMEOUT_SHORT>;           //  │  0   1   2   3   4   5 │   │  6   7   8   9  10  11 │
            key-positions = <15 16>; // df                //  │ 12  13  14  --  --  17 │   │ 18  19  20  21  22  23 │
            bindings = <&pair_par>;                       //  │ 24  25  26  27  28  29 │   │ 30  31  32  33  34  35 │
            layers = <0 1 2>;                             //  ╰───────────╮ 36  37  38 │   │ 39  40  41 ╭───────────╯
                                                          //              ╰────────────╯   ╰────────────╯  
        };
        combo_brc_er { // {|} //                          //  ╭────────────────────────╮   ╭────────────────────────╮
            timeout-ms = <COMBO_TIMEOUT_SHORT>;           //  │  0   1   2  --  --   5 │   │  6   7   8   9  10  11 │
            key-positions = <3 4>; // er                  //  │ 12  13  14  15  16  17 │   │ 18  19  20  21  22  23 │
            bindings = <&pair_brc>;                       //  │ 24  25  26  27  28  29 │   │ 30  31  32  33  34  35 │
            layers = <0 1 2>;                             //  ╰───────────╮ 36  37  38 │   │ 39  40  41 ╭───────────╯
                                                          //              ╰────────────╯   ╰────────────╯  
        };
        combo_bt_io { // `|` //                           //  ╭────────────────────────╮   ╭────────────────────────╮
            timeout-ms = <COMBO_TIMEOUT_SHORT>;           //  │  0   1   2   3   4   5 │   │  6   7   8  --  --  11 │
            key-positions = <9 10>; // io                 //  │ 12  13  14  15  16  17 │   │ 18  19  20  21  22  23 │
            bindings = <&pair_btk>;                       //  │ 24  25  26  27  28  29 │   │ 30  31  32  33  34  35 │
            layers = <0 1 2>;                             //  ╰───────────╮ 36  37  38 │   │ 39  40  41 ╭───────────╯
                                                          //              ╰────────────╯   ╰────────────╯  
        };
        combo_sqt_kl { // '|' //                          //  ╭────────────────────────╮   ╭────────────────────────╮
            timeout-ms = <COMBO_TIMEOUT_SHORT>;           //  │  0   1   2   3   4   5 │   │  6   7   8   9  10  11 │
            key-positions = <21 22>; // kl                //  │ 12  13  14  15  16  17 │   │ 18  19  20  --  --  23 │
            bindings = <&pair_sqt>;                       //  │ 24  25  26  27  28  29 │   │ 30  31  32  33  34  35 │
            layers = <0 1 2>;                             //  ╰───────────╮ 36  37  38 │   │ 39  40  41 ╭───────────╯
                                                          //              ╰────────────╯   ╰────────────╯  
        };
        combo_dqt_commadot { // "|" //                    //  ╭────────────────────────╮   ╭────────────────────────╮
            timeout-ms = <COMBO_TIMEOUT_SHORT>;           //  │  0   1   2   3   4   5 │   │  6   7   8   9  10  11 │
            key-positions = <33 34>; // ,.                //  │ 12  13  14  15  16  17 │   │ 18  19  20  21  22  23 │
            bindings = <&pair_dqt>;                       //  │ 24  25  26  27  28  29 │   │ 30  31  32  --  --  35 │
            layers = <0 1 2>;                             //  ╰───────────╮ 36  37  38 │   │ 39  40  41 ╭───────────╯
                                                          //              ╰────────────╯   ╰────────────╯  
        };
        combo_cbk { // ```|``` //                         //  ╭────────────────────────╮   ╭────────────────────────╮ 
            timeout-ms = <COMBO_TIMEOUT_SHORT>;           //  │  0   1   2   3   4   5 │   │  6   7   8   9  10  11 │
            key-positions = <24 35>; //bottom row pinky   //  │ 12  13  14  15  16  17 │   │ 18  19  20  21  22  23 │
            bindings = <&pair_cbk>;                       //  │ --  25  26  27  28  29 │   │ 30  31  32  33  34  -- │
            layers = <0 1 2>;                             //  ╰───────────╮ 36  37  38 │   │ 39  40  41 ╭───────────╯
                                                          //              ╰────────────╯   ╰────────────╯                             
        };  
        bluetooth_lshiftzx {                               //  ╭────────────────────────╮   ╭────────────────────────╮
            bindings = <&tog 3>;                           //  │  0   1   2   3   4   5 │   │  6   7   8   9  10  11 │
            key-positions = <24 25 26>; // Lshftzx         //  │ 12  13  14  15  16  17 │   │ 18  19  20  21  22  23 │
            layers = <0 1 2 3 4>;                          //  │ --  --  --  27  28  29 │   │ 30  31  32  33  34  35 │
            timeout-ms = <50>;                             //  ╰───────────╮ 36  37  38 │   │ 39  40  41 ╭───────────╯
                                                           //              ╰────────────╯   ╰────────────╯  
        };
        gaming_thumbrow_left {                             //  ╭────────────────────────╮   ╭────────────────────────╮
            bindings = <&tog 4>;                           //  │  0   1   2   3   4   5 │   │  6   7   8   9  10  11 │
            key-positions = <36 37 38>; // thumb row left  //  │ 12  13  14  15  16  17 │   │ 18  19  20  21  22  23 │
            layers = <0 1 2 3 4>;                          //  │ 24  25  26  27  28  29 │   │ 30  31  32  33  34  35 │
            timeout-ms = <50>;                             //  ╰───────────╮ --  --  -- │   │ 39  40  41 ╭───────────╯
                                                           //              ╰────────────╯   ╰────────────╯ 
        };
        home_middlethumbs {                                //  ╭────────────────────────╮   ╭────────────────────────╮
            bindings = <&tog 0>;                           //  │  0   1   2   3   4   5 │   │  6   7   8   9  10  11 │
            key-positions = <37 40>; // middle thumbs      //  │ 12  13  14  15  16  17 │   │ 18  19  20  21  22  23 │   
            layers = <0 1 2 3 4>;                          //  │ 24  25  26  27  28  29 │   │ 30  31  32  33  34  35 │
            timeout-ms = <50>;                             //  ╰───────────╮ 36  --  38 │   │ 39  --  41 ╭───────────╯
                                                           //              ╰────────────╯   ╰────────────╯ 
        };
        nums_layerthumbs {                                 //  ╭────────────────────────╮   ╭────────────────────────╮
            bindings = <&tog 1>;                           //  │  0   1   2   3   4   5 │   │  6   7   8   9  10  11 │
            key-positions = <36 41>; // outside thumbs     //  │ 12  13  14  15  16  17 │   │ 18  19  20  21  22  23 │ 
            layers = <0 1 2 3 4>;                          //  │ 24  25  26  27  28  29 │   │ 30  31  32  33  34  35 │
            timeout-ms = <50>;                             //  ╰───────────╮ --  37  38 │   │ 39  40  -- ╭───────────╯
                                                           //              ╰────────────╯   ╰────────────╯ 
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R       |  T  |     |  Y  |  U        |  I  |  O  |  P  |   BKSP    |
            // | SHFT |  A  |  S  |  D  |  F       |  G  |     |  H  |  J        |  K  |  L  |  ;  |     '     |
            // | CTRL |  Z  |  X  |  C  |  V       |  B  |     |  N  |  M        |  ,  |  .  |  /  | SHFT(RET) |
            //                 | GUI | mo2 | shift space |     | ENT | mo1(backspace)  | ALT |

           label = "QWERTY";
             bindings = <
             &mt ESC TAB  &mt C_PREVIOUS Q  &mt C_NEXT W  &mt C_PLAY_PAUSE E  &mt C_VOL_DN R  &mt C_VOL_UP T        &kp Y    &kp U  &kp I     &kp O    &kp P     &kp BSPC
          &mt LSHFT CAPS  &kp A             &kp S         &kp D               &kp F           &mt C_MUTE G          &kp H    &kp J  &kp K     &kp L    &kp SEMI  &kp SQT
             &kp LSHFT    &kp Z             &kp X         &kp C               &kp V           &kp B                 &kp N    &kp M  &kp COMMA &kp DOT  &kp FSLH  &mt RSHFT RET
                                                          &kp LGUI            &mo 2           &mt LSHFT SPACE       &kp RET  &lt 1 BACKSPACE  &kp RIGHT_ALT
            >; 
        };

        NUM_NAV {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  ,  |  7  |  8  |  9  |BKSP |     | pgup |XXXXX|  UP  |  (   |    )  | BKSP|
            // |SHFT  |  .  |  4  |  5  |  6  |XXXXX|     | pgdwn | left | Down | right|  :  |  _  |
            // |DEL   |  /  |  1  |  2  |  3 |XXXXXX|     | (     | )    | -    | +    | =   | ALT |
            //                    |  0  |____|______|     |_______|______|  DEL |

            label = "NUM_NAV";
            bindings = <
    &mt ESC TAB  &kp COMMA  &kp N7  &kp N8  &kp N9  &kp BSPC       &kp PG_UP  &kp AMPS  &kp STAR          &kp LPAR  &kp RPAR   &kp BSPC
    &kp LSHFT    &kp DOT    &kp N4  &kp N5  &kp N6  &none          &kp PG_DN  &kp EQUAL &kp LBKT          &kp RBKT  &kp PIPE   &none
    &kp DEL      &kp FSLH   &kp N1  &kp N2  &kp N3  &none          &kp LPAR   &kp PLUS  &kp LBRC          &kp RBRC  &kp BSLH   &none
                                    &kp N0  &mo 3   &trans         &trans     &trans    &trans
            >;
        };

        FNXTRA {
            // -----------------------------------------------------------------------------------------
            // | ESC |  $   |  F7 | F8  | F9  |  !   |   |  ^  |  &  |  *  |  {  |  }  | ____ |
            // | CAPS|  %   |  F4 |  F5 | F6  |  @   |   |  -  |  =  |  (  |  )  |  \  |   `  |
            // | ___ | XXXX |  F1 |  F2 | F3  |  #   |   |  _  |  +  |  [  |  ]  | "|" |   ~  |
            //                   | F10 |______|______|   |_____|_____|_____|

            label = "FNXTRA";
            bindings = <
   &kp ESC   &kp DLLR  &kp F7  &kp F8  &kp F9  &kp EXCL          &kp CARET  &kp AMPS    &kp ASTRK  &kp LBRC   &kp RBRC  &trans
   &kp CAPS  &kp PRCNT &kp F4  &kp F5  &kp F6  &kp AT            &kp MINUS  &kp EQUAL   &kp LPAR   &kp RPAR   &kp BSLH  &kp GRAV
   &trans    &none     &kp F1  &kp F2  &kp F3  &kp HASH          &kp UNDER  &kp PLUS    &kp LBKT   &kp RBKT   &kp PIPE  &kp TILDE
                               &kp F10 &trans  &trans            &trans     &trans      &trans
            >;
        };

        GAME {
           // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R       |  T  |     |  Y  |  U        |  I  |  O  |  P  |   BKSP    |
            // | CAPS |  A  |  S  |  D  |  F       |  G  |     |  H  |  J        |  K  |  L  |  ;  |     '     |
            // | LSHFT |  Z  |  X  |  C  |  V       |  B  |     |  N  |  M        |  ,  |  .  |  /  | SHFT(RET) |
            //                 | GUI | left alt | shift space |     | ENT | mo1(backspace)  | ALT |            

            label = "GAME";
            bindings = <
            &kp TAB   &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y    &kp U  &kp I     &kp O    &kp P     &kp BSPC
            &kp CAPS  &kp A  &kp S  &kp D  &kp F  &kp G        &kp H    &kp J  &kp K     &kp L    &kp SEMI  &kp SQT
            &kp LSHFT &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N    &kp M  &kp COMMA &kp DOT  &kp FSLH  &kp LGUI
                                    &kp ESC  &kp LEFT_ALT  &kp SPACE    &kp RET  &mo 1   &kp RIGHT_ALT
            >;
        };

        BT_BL {
           // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R       |  T  |     |  Y  |  U        |  I  |  O  |  P  |   BKSP    |
            // | CAPS |  A  |  S  |  D  |  F       |  G  |     |  H  |  J        |  K  |  L  |  ;  |     '     |
            // | LSHFT |  Z  |  X  |  C  |  V       |  B  |     |  N  |  M        |  ,  |  .  |  /  | SHFT(RET) |
            //                 | GUI | mo2 | shift space |     | ENT | mo1(backspace)  | ALT |            

            label = "BT_BL";
            bindings = <
            &kp TAB   &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y    &kp U  &kp I     &kp O    &kp P     &kp BSPC
            &kp CAPS  &kp A  &kp S  &kp D  &kp F  &kp G        &kp H    &kp J  &kp K     &kp L    &kp SEMI  &kp SQT
            &kp LSHFT &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N    &kp M  &kp COMMA &kp DOT  &kp FSLH  &mt RSHFT RET
                                 &kp LGUI  &mo 2  &kp SPACE    &kp RET  &lt 1 BACKSPACE  &kp RIGHT_ALT
            >;
        };
    };
};

