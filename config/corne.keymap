/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/outputs.h>
 
 #define QWERTY 0
 #define NUM_NAV  1
 #define FNXTRA  2
 #define GAME 3
 #define BT_BL 4

 #define Vup C_VOL_UP
 #define Vdn C_VOL_DN
 #define Mute C_MUTE
 #define PPre C_PREVIOUS 
 #define PNex C_NEXT
 #define PlayP C_PLAY_PAUSE 
 
 / {
     combos {
         compatible = "zmk,combos";
 
         rt {
             bindings = <&kp LEFT_PARENTHESIS>;
             key-positions = <4 5>;
             layers = <0>;
             timeout-ms = <50>;
         };
 
         yu {
             bindings = <&kp RIGHT_PARENTHESIS>;
             key-positions = <6 7>;
             layers = <0>;
             timeout-ms = <50>;
         };
 
         fg {
             bindings = <&kp LEFT_BRACKET>;
             key-positions = <16 17>;
             layers = <0>;
             timeout-ms = <50>;
         };
 
         hj {
             bindings = <&kp RIGHT_BRACKET>;
             key-positions = <18 19>;
             layers = <0>;
             timeout-ms = <50>;
         };
 
         vb {
             bindings = <&kp LEFT_BRACE>;
             key-positions = <28 29>;
             layers = <0>;
             timeout-ms = <50>;
         };
 
         nm {
             bindings = <&kp RIGHT_BRACE>;
             key-positions = <30 31>;
             layers = <0>;
             timeout-ms = <50>;
         };
 
         cv {
             bindings = <&kp PIPE>;
             key-positions = <27 28>;
             layers = <0>;
             timeout-ms = <50>;
         };
 
         bluetooth {
             bindings = <&tog 3>;
             key-positions = <24 25 26>;
             layers = <0 1 2 3 4>;
             timeout-ms = <50>;
         };
 
         gaming {
             bindings = <&tog 4>;
             key-positions = <36 37 38>;
             layers = <0 1 2 3 4>;
             timeout-ms = <50>;
         };
 
         home {
             bindings = <&tog 0>;
             key-positions = <37 40>;
             layers = <0 1 2 3 4>;
             timeout-ms = <50>;
         };
 
         nums {
             bindings = <&tog 1>;
             key-positions = <36 41>;
             layers = <0 1 2 3 4>;
             timeout-ms = <50>;
         };
 
         m_ {
             bindings = <&kp BSLH>;
             key-positions = <31 32>;
             layers = <0>;
             timeout-ms = <50>;
         };
     };
 
     keymap {
         compatible = "zmk,keymap";
 
         QWERTY {

            // want this 
  //,-----------------------------------------------------.                    ,-----------------------------------------------------.
  //      TAB, Prev Q,  Next W, Pause E, Voldwn R, Volup T,                            Y,       U,       I,       O,      P, prtscrn BSPC,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
  //   LSHIFT,       A,       S,       D,       F,  Volm G,                            H,       J,       K,       L, SEMICln,    QUOT,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
  // LCONTROL,       Z,       X,       C,       V,       B,                            N,       M,    COMM,     DOT, fwdSLSH,     ESC,
  //|--------+--------+--------+--------+--------+--------+--------|  |--------+--------+--------+--------+--------+--------+--------|
                                      //     LGUI,Layerdwn, Shift SPC,      ENT, LayerUp,    RALT
                                      //`--------------------------'  `--------------------------'

             label = "QWERTY";
             bindings = <
            &mt ESC TAB  &mt Prev Q  &mt Next W  &mt PlayP E  &mt Voldwn R  &mt Volup T           &kp Y    &kp U  &kp I     &kp O    &kp P     &kp BSPC
          &mt LSHFT CAPS &kp A       &kp S       &kp D        &kp F         &mt Volm G            &kp H    &kp J  &kp K     &kp L    &kp SEMI  &kp SQT
             &kp LSHFT   &kp Z       &kp X       &kp C        &kp V         &kp B                 &kp N    &kp M  &kp COMMA &kp DOT  &kp FSLH  &mt RSHFT RET
                                                 &kp LGUI     &mo 2         &mt LSHFT SPACE       &kp RET  &lt 1 BACKSPACE  &kp RIGHT_ALT
             >;
         };
 
         NUM_NAV {
             // -----------------------------------------------------------------------------------------
             // | ESC  |  !  |  @  |  #  |  $  |  %  |     |  ^   |  &   |  *   |  (   |  )  | DEL |
             // |      | CAPS|     |  {  |  }  | "|" |     | LEFT | DOWN |  UP  | RGT  |  :  |  "  |
             // |      |     |     |     |  `  |  ~  |     | HOME | END  | PGUP | PGDN | INS | ALT |
             //                    |     | SET |     |     |      |      |      |
 
             label = "NUM_NAV";
             bindings = <
  &kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT          &kp CARET   &kp AMPS          &kp STAR           &kp LPAR       &kp RPAR  &kp DEL
     &trans     &none   &none     &none     &none  &kp GRAVE          &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET       &kp PIPE    &none
     &trans     &none   &none     &none     &none  &kp TILDE          &kp UNDER   &kp PLUS    &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp BACKSLASH    &none
                                 &trans     &mo 3     &trans             &trans     &trans            &trans
             >;
         };
 
         FNXTRA {
             // -----------------------------------------------------------------------------------------
             // | ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL  |
             // | SHF |  F1 |  F2 |  F3 | F4  |  F5 |   |  -  |  =  |  [  |  ]  |  \  | F11  |
             // | CTL |  F6 |  F7 |  F8 | F9  | F10 |   |  _  |  +  |  {  |  }  | "|" | F12  |
             //                   |     |     |     |   | SET |     |     |
 
             label = "FNXTRA";
             bindings = <
    &trans  &kp N1  &kp N2  &kp N3  &kp N4   &kp N5            &kp N6    &kp N7     &kp N8     &kp N9  &kp N0  &kp DEL
  &kp CAPS  &kp F1  &kp F2  &kp F3  &kp F4   &kp F5          &kp LEFT  &kp DOWN     &kp UP  &kp RIGHT   &none  &kp F11
    &trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10          &kp HOME   &kp END  &kp PG_UP  &kp PG_DN   &none  &kp F12
                            &trans  &trans   &trans            &trans     &mo 3     &trans
             >;
         };
 
         GAME {
             // -----------------------------------------------------------------------------------------
             // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ | | RGB TOG |     |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
             // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- | |         |     |       |     |     |     |     |        |
             // |          |          |          |          | |         |     | RESET |     |     |     |     |        |
             //                                  |          | |         |     |       |     |     |
 
             label = "GAME";
             bindings = <
  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF   &none  &rgb_ug RGB_TOG          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_CLR
  &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR   &none            &none                 &none         &none         &none         &none  &out OUT_BLE  &out OUT_USB
            &none            &none            &none            &none   &none            &none                &sys_reset   &bootloader         &none         &none         &none  &out OUT_TOG
                                                              &trans  &trans           &trans                &trans        &trans        &trans
             >;
         };
     };
 };